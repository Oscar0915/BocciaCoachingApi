// <auto-generated />
using System;
using BocciaCoaching.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BocciaCoaching.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BocciaCoaching.Models.Entities.AssessStrength", b =>
                {
                    b.Property<int>("AssessStrengthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AssessStrengthId"));

                    b.Property<DateTime>("EvaluationDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AssessStrengthId");

                    b.ToTable("AssessStrength");
                });

            modelBuilder.Entity("BocciaCoaching.Models.Entities.AthletesToEvaluated", b =>
                {
                    b.Property<int>("AthletesToEvaluatedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AthletesToEvaluatedId"));

                    b.Property<int>("AssessStrengthId")
                        .HasColumnType("int");

                    b.Property<int>("AthleteId")
                        .HasColumnType("int");

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.HasKey("AthletesToEvaluatedId");

                    b.HasIndex("AssessStrengthId");

                    b.HasIndex("AthleteId");

                    b.HasIndex("CoachId");

                    b.ToTable("AthletesToEvaluated");
                });

            modelBuilder.Entity("BocciaCoaching.Models.Entities.EvaluationDetailStrength", b =>
                {
                    b.Property<int>("EvaluationDetailStrengthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EvaluationDetailStrengthId"));

                    b.Property<int>("AssessStrengthId")
                        .HasColumnType("int");

                    b.Property<int>("AthleteId")
                        .HasColumnType("int");

                    b.Property<int>("BoxNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observations")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("ScoreObtained")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("TargetDistance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ThrowOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EvaluationDetailStrengthId");

                    b.HasIndex("AssessStrengthId");

                    b.HasIndex("AthleteId");

                    b.ToTable("EvaluationDetailStrength");
                });

            modelBuilder.Entity("BocciaCoaching.Models.Entities.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RolId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("BocciaCoaching.Models.Entities.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Session");
                });

            modelBuilder.Entity("BocciaCoaching.Models.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Dni")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Seniority")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BocciaCoaching.Models.Entities.UserRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRol");
                });

            modelBuilder.Entity("BocciaCoaching.Models.Entities.AthletesToEvaluated", b =>
                {
                    b.HasOne("BocciaCoaching.Models.Entities.AssessStrength", "AssessStrength")
                        .WithMany()
                        .HasForeignKey("AssessStrengthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BocciaCoaching.Models.Entities.User", "Athlete")
                        .WithMany()
                        .HasForeignKey("AthleteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BocciaCoaching.Models.Entities.User", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssessStrength");

                    b.Navigation("Athlete");

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("BocciaCoaching.Models.Entities.EvaluationDetailStrength", b =>
                {
                    b.HasOne("BocciaCoaching.Models.Entities.AssessStrength", "AssessStrength")
                        .WithMany()
                        .HasForeignKey("AssessStrengthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BocciaCoaching.Models.Entities.User", "Athlete")
                        .WithMany()
                        .HasForeignKey("AthleteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssessStrength");

                    b.Navigation("Athlete");
                });

            modelBuilder.Entity("BocciaCoaching.Models.Entities.Session", b =>
                {
                    b.HasOne("BocciaCoaching.Models.Entities.User", "User")
                        .WithOne("Session")
                        .HasForeignKey("BocciaCoaching.Models.Entities.Session", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BocciaCoaching.Models.Entities.UserRol", b =>
                {
                    b.HasOne("BocciaCoaching.Models.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BocciaCoaching.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BocciaCoaching.Models.Entities.User", b =>
                {
                    b.Navigation("Session");
                });
#pragma warning restore 612, 618
        }
    }
}
